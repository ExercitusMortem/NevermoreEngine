"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[76140],{22440:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new remoting instance","params":[{"name":"instance","desc":"","lua_type":"Instance"},{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Remoting"}],"function_type":"static","source":{"line":43,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"Connect","desc":"Connects to a given remote event.","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"callback","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"MaidTask"}],"function_type":"method","source":{"line":77,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"Bind","desc":"If on the server, creates a new [RemoteFunction] with the name `memberName` and binds the\\ninvoke. On the client, it waits for the event to exist and then binds to it.","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"callback","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":120,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"DeclareEvent","desc":"Forward declares an event on the remoting object","params":[{"name":"memberName","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":161,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"DeclareMethod","desc":"Forward declares an event on the remoting object","params":[{"name":"memberName","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":174,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"FireClient","desc":"Fires the client with the individual request. Should consider this syntax instead.\\n\\n```lua\\nlocal remoting = Remoting.new(workspace, \\"Test\\")\\nremoting.Event:FireClient(otherPlayer, ...)\\n```\\n\\nEquivalent of [RemoteFunction.FireClient].","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"player","desc":"","lua_type":"Player"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":242,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"InvokeClient","desc":"Invokes the client, yielding as needed\\n\\nEquivalent of [RemoteFunction.InvokeClient].","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"player","desc":"","lua_type":"Player"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":261,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"FireAllClients","desc":"Fires all clients with the event.\\n\\nEquivalent of [RemoteEvent.FireAllClients].","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":279,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"FireServer","desc":"Fires the server","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":294,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"PromiseFireServer","desc":"Fires the server, resolving the promise once it is fired.","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Promise"}],"function_type":"method","realm":["Client"],"source":{"line":309,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"InvokeServer","desc":"Invokes the server from the client","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","realm":["Client"],"source":{"line":342,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"PromiseInvokeServer","desc":"Invokes the server from the client","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Promise<any>"}],"function_type":"method","realm":["Client"],"source":{"line":356,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"PromiseInvokeClient","desc":"Invokes the client from the server","params":[{"name":"memberName","desc":"","lua_type":"string"},{"name":"player","desc":"","lua_type":"Player"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Promise<any>"}],"function_type":"method","realm":["Server"],"source":{"line":389,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}},{"name":"Destroy","desc":"Cleans up the remoting object","params":[],"returns":[],"function_type":"method","source":{"line":527,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}}],"properties":[],"types":[],"name":"Remoting","desc":"Offers a thin wrapper around Roblox remoting instances and events. Designed to reduce\\nthe amount of code needed to construct a large set of RemoteFunction/RemoteEvent instances.","source":{"line":7,"path":"src/remoting/src/Shared/Interface/Remoting.lua"}}')}}]);