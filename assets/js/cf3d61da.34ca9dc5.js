"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28834],{85717:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new game config picker. Should be gotten by [GameConfigService].","params":[{"name":"gameConfigBinder","desc":"","lua_type":"Binder<GameConfig>"},{"name":"gameConfigAssetBinder","desc":"","lua_type":"Binder<GameConfigAsset>"}],"returns":[],"function_type":"static","source":{"line":26,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveActiveAssetOfTypeBrio","desc":"Observes active assets of a given type. Great for badge views or other things.","params":[{"name":"assetType","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Observable<Brio<GameConfigAssetBase>>"}],"function_type":"method","source":{"line":54,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveActiveAssetOfAssetTypeAndKeyBrio","desc":"Observes all active assets of a type and key.\\n\\n```lua\\nmaid:GiveTask(picker:ObserveActiveAssetOfAssetTypeAndKeyBrio(GameConfigAssetType.BADGE, \\"myBadge\\")\\n\\t:Pipe({\\n\\t\\tRxStateStackUtils.topOfStack();\\n\\t}):Subscribe(function(activeBadge)\\n\\t\\tprint(activeBadge:GetId())\\n\\tend)\\n```","params":[{"name":"assetType","desc":"","lua_type":"string"},{"name":"assetKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Observable<Brio<GameConfigAssetBase>>"}],"function_type":"method","source":{"line":81,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveActiveAssetOfAssetTypeAndIdBrio","desc":"Observes all active assets of a type and an id.","params":[{"name":"assetType","desc":"","lua_type":"string"},{"name":"assetId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Observable<Brio<GameConfigAssetBase>>"}],"function_type":"method","source":{"line":99,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveActiveAssetOfAssetIdBrio","desc":"Observes all active assets of an id","params":[{"name":"assetId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Observable<Brio<GameConfigAssetBase>>"}],"function_type":"method","source":{"line":116,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveActiveAssetOfKeyBrio","desc":"Observes all active assets of a key","params":[{"name":"assetKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Observable<Brio<GameConfigAssetBase>>"}],"function_type":"method","source":{"line":133,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveActiveConfigsBrio","desc":"Observes all active active assets","params":[],"returns":[{"desc":"","lua_type":"Observable<Brio<GameConfigAssetBase>>"}],"function_type":"method","source":{"line":149,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"GetActiveConfigs","desc":"Gets all active configs that exist","params":[],"returns":[{"desc":"","lua_type":"{ GameConfigAssetBase }"}],"function_type":"method","source":{"line":158,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"FindFirstActiveAssetOfId","desc":"Find the first asset of a given id","params":[{"name":"assetType","desc":"","lua_type":"string"},{"name":"assetId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"GameConfigAssetBase"}],"function_type":"method","source":{"line":169,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"PromisePriceInRobux","desc":"Find the first asset of a given key","params":[{"name":"assetType","desc":"","lua_type":"string"},{"name":"assetIdOrKey","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"GameConfigAssetBase"}],"function_type":"method","source":{"line":189,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"FindFirstActiveAssetOfKey","desc":"Find the first asset of a given key","params":[{"name":"assetType","desc":"","lua_type":"string"},{"name":"assetKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"GameConfigAssetBase"}],"function_type":"method","source":{"line":227,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"GetAllActiveAssetsOfType","desc":"Gets all assets of a given type","params":[{"name":"assetType","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"{ GameConfigAssetBase }"}],"function_type":"method","source":{"line":246,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ToAssetId","desc":"Converts an asset type and key to an id","params":[{"name":"assetType","desc":"","lua_type":"GameConfigAssetType"},{"name":"assetIdOrKey","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"number | nil"}],"function_type":"method","source":{"line":275,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}},{"name":"ObserveToAssetIdBrio","desc":"Observes a converted asset type and key to an id","params":[{"name":"assetType","desc":"","lua_type":"GameConfigAssetType"},{"name":"assetIdOrKey","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"Observable<Brio<number>>"}],"function_type":"method","source":{"line":298,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}}],"properties":[],"types":[],"name":"GameConfigPicker","desc":"Provides an interface to query game configurations from assets in the world.","source":{"line":5,"path":"src/gameconfig/src/Shared/Config/Picker/GameConfigPicker.lua"}}')}}]);