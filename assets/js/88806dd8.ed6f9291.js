"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[54023],{37092:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Initializes a new OverrideDefaultCameraToo","params":[{"name":"baseCamera","desc":"","lua_type":"Camera"},{"name":"defaultCamera","desc":"","lua_type":"DefaultCamera"},{"name":"predicate","desc":"","lua_type":"Filter on whether to override or not"}],"returns":[],"function_type":"static","source":{"line":30,"path":"src/camera/src/Client/Effects/OverrideDefaultCameraToo.lua"}}],"properties":[],"types":[],"name":"OverrideDefaultCameraToo","desc":"Allows you to override the default camera with this cameras\\ninformation. Useful for custom camera controls that the user\\ncontrols.\\n\\n```lua\\nlocal combiner = OverrideDefaultCameraToo.new(effect, self._cameraStackService:GetRawDefaultCamera())\\ncombiner.Predicate = function()\\n\\treturn self._cameraStateTweener:IsFinishedShowing()\\nend\\n```","source":{"line":15,"path":"src/camera/src/Client/Effects/OverrideDefaultCameraToo.lua"}}')}}]);