"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57352],{410:e=>{e.exports=JSON.parse('{"functions":[{"name":"Init","desc":"Initializes the service. Should be done via [ServiceBag]","params":[{"name":"serviceBag","desc":"","lua_type":"ServiceBag"}],"returns":[],"function_type":"method","source":{"line":30,"path":"src/gameproductservice/src/Server/GameProductService.lua"}},{"name":"Start","desc":"Starts the service. Should be done via [ServiceBag]","params":[],"returns":[],"function_type":"method","source":{"line":50,"path":"src/gameproductservice/src/Server/GameProductService.lua"}},{"name":"HasPlayerPurchasedThisSession","desc":"Returns true if item has been purchased this session","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"assetType","desc":"","lua_type":"GameConfigAssetType"},{"name":"idOrKey","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":74,"path":"src/gameproductservice/src/Server/GameProductService.lua"}},{"name":"PromisePlayerPromptPurchase","desc":"Prompts the user to purchase the asset, and returns true if purchased","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"assetType","desc":"","lua_type":"GameConfigAssetType"},{"name":"idOrKey","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":90,"path":"src/gameproductservice/src/Server/GameProductService.lua"}},{"name":"PromisePlayerOwnership","desc":"Returns true if item has been purchased this session","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"assetType","desc":"","lua_type":"GameConfigAssetType"},{"name":"idOrKey","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Promise<boolean>"}],"function_type":"method","source":{"line":106,"path":"src/gameproductservice/src/Server/GameProductService.lua"}},{"name":"ObservePlayerOwnership","desc":"Observes if the player owns this cloud asset or not","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"assetType","desc":"","lua_type":"GameConfigAssetType"},{"name":"idOrKey","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Observable<boolean>"}],"function_type":"method","source":{"line":122,"path":"src/gameproductservice/src/Server/GameProductService.lua"}}],"properties":[],"types":[],"name":"GameProductService","desc":"This service provides an interface to purchase produces, assets, and other\\nmarketplace items. This listens to events, handles requests between server and\\nclient, and takes in both assetKeys from GameConfigService, as well as\\nassetIds.\\n\\nSee [GameProductServiceClient] for the client equivalent. The API surface should be\\neffectively the same between the two.","realm":["Server"],"source":{"line":13,"path":"src/gameproductservice/src/Server/GameProductService.lua"}}')}}]);